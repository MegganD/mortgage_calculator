{"version":3,"sources":["images/minimalistHome.jpg","auth/auth.js","api/MortageCalculator.js","services/CalculatorService.js","components/Register.js","components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["_accessToken","axiosInstance","axois","create","baseURL","process","REACT_APP_API_URL","timeout","interceptors","request","use","config","console","log","headers","Authorization","error","Promise","reject","CalculatorService","mortgageCalculatorData","values","post","registerData","details","useStyles","makeStyles","theme","paper","width","height","marginLeft","marginTop","backgroundColor","input","margin","spacing","borderColor","inputText","color","notchedOutline","formHeader","fontSize","fontWeight","padding","regGrid","regButton","fontFamily","msg","modal","display","alignItems","justifyContent","modalPaper","palette","background","border","boxShadow","shadows","Calculator","classes","useState","firstName","surname","email","createPassword","password","message","register","setRegister","popUp","setPopUp","open","setOpen","handleChange","e","value","target","name","customerRegistration","a","then","result","data","response","Fragment","Paper","className","elevation","typingSpeed","pauseTime","sentences","loop","TextField","placeholder","variant","id","InputProps","onChange","style","type","Button","onClick","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","in","calcGrid","maxWidth","heading","textTransform","button","results","resultsText","payments","purchasePrice","deposit","loanTerm","interestRate","calcValues","setCalcValues","bondRepayments","setBondRepayments","parseFloat","parseInt","toFixed","Grid","container","item","xs","sm","label","textFields","startAdornment","InputAdornment","position","InputLabelProps","shrink","select","SelectProps","native","fullWidth","map","term","calculateMortgage","Typography","Register","root","backgroundImage","backgroundSize","backgroundPosition","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","REACT_APP_BASEURL","ReactDOM","render","basename","component","document","getElementById"],"mappings":"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","file":"static/js/main.091f9200.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/minimalistHome.f1ebf4ee.jpg\";","import Oidc from 'oidc-client';\r\n\r\nlet _idToken = null;\r\nlet _accessToken = null;\r\nlet _expiresAt = null;\r\nlet _scopes = null;\r\n\r\nclass Auth {\r\n\tconstructor(router) {\r\n\t\tthis.userProfile = null;\r\n\t\tthis.router = router;\r\n\t\tthis.auth = new Oidc.UserManager({\r\n\t\t\tauthority: process.env.REACT_APP_AUTH_URL, //(string): The URL of the OIDC provider.\r\n\t\t\tclient_id: process.env.REACT_APP_IDENTITY_CLIENT_ID, //(string): Your client application's identifier as registered with the OIDC provider.\r\n\t\t\tredirect_uri: `${process.env.REACT_APP_SILENT_REDIRECT_URL}/callback`, //The URI of your client application to receive a response from the OIDC provider.\r\n\t\t\tsilent_redirect_uri: `${process.env.REACT_APP_SILENT_REDIRECT_URL}/callback`, //(string): The URL for the page containing the code handling the silent renew.\r\n\t\t\tpost_logout_redirect_uri: process.env.REACT_APP_LOGOFF_REDIRECT_URL, // (string): The OIDC post-logout redirect URI.\r\n\t\t\tpost_logout_uri: process.env.REACT_APP_LOGOFF_URL,\r\n\t\t\tscope: 'openid profile offline_access', //(string, default: 'openid'): The scope being requested from the OIDC provider.\r\n\t\t\tresponse_type: 'id_token token',\r\n\t\t});\r\n\t}\r\n\r\n\tlogin = () => {\r\n\t\treturn this.auth\r\n\t\t\t.signinRedirect()\r\n\t\t\t.then((result) => {\r\n\t\t\t\treturn true; //login successful\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tthis.router.push('/error');\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t};\r\n\r\n\thandleAuthentication = () => {\r\n\t\tthis.auth\r\n\t\t\t.signinRedirectCallback()\r\n\t\t\t.then((authResult) => {\r\n\t\t\t\tif (authResult && authResult.access_token && authResult.id_token) {\r\n\t\t\t\t\t//Success starting session\r\n\t\t\t\t\tthis.setSession(authResult);\r\n\t\t\t\t\tthis.userProfile = this.auth.getUser();\r\n\t\t\t\t    this.router.push('/dashboard');\r\n\t\t\t\t\treturn authResult;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Error handling authentications\r\n\t\t\t\t\tthis.router.push('/error');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log('AUTH', error);\r\n\t\t\t});\r\n\t};\r\n\r\n\tsetSession = (authResult) => {\r\n\t\t_expiresAt = authResult.expires_in * 1000 + new Date().getTime();\r\n\t\t_idToken = authResult.id_token;\r\n\t\t_accessToken = `Bearer ${authResult.id_token}`;\r\n\t\t_scopes = authResult.scopes || this.requestedScopes || '';\r\n\t\tsessionStorage.setItem('lew-portal', `Bearer ${authResult.id_token}`);\r\n\t\tthis.scheduleRenewal();\r\n\t};\r\n\r\n\tisAuthenticated = () => {\r\n\t\treturn new Date().getTime() < _expiresAt;\r\n\t};\r\n\r\n\tlogout = () => {\r\n\t\tthis.userProfile = null;\r\n\t\tthis.auth\r\n\t\t\t.signoutRedirectCallback()\r\n\t\t\t.then(() => {\r\n\t\t\t\tsessionStorage.clear();\r\n\t\t\t\t//Signed out\r\n\t\t\t\tdocument.location.href = process.env.REACT_APP_LOGOFF_REDIRECT_URL;\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log('AUTH', error);\r\n\t\t\t});\r\n\t};\r\n\r\n\tgetAccessToken = () => {\r\n\t\tif (!_accessToken) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn _accessToken;\r\n\t};\r\n\r\n\tgetProfile = (callback) => {\r\n\t\tif (this.userProfile) return callback(this.userProfile);\r\n\t\tif (this.getAccessToken() != null) {\r\n\t\t\tthis.auth\r\n\t\t\t\t.getUser()\r\n\t\t\t\t.then((result) => {\r\n\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcallback(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log('AUTH', error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trenewToken(callback) {\r\n\t\tthis.auth\r\n\t\t\t.getUser()\r\n\t\t\t.then((result) => {\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tthis.setSession(result);\r\n\t\t\t\t}\r\n\t\t\t\tif (callback) {\r\n\t\t\t\t\tcallback(null, null);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tconsole.log('AUTH', 'Error validating token', error);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tscheduleRenewal = () => {\r\n\t\tconst delay = _expiresAt - Date.now();\r\n\t\tif (delay > 0) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.renewToken();\r\n\t\t\t}, delay);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport { Auth, _accessToken, _scopes, _idToken };\r\n","import axois from 'axios';\r\nimport { _accessToken } from '../auth/auth';\r\n\r\nexport const axiosInstance =  axois.create({\r\n\tbaseURL:`${process.env.REACT_APP_API_URL}`,\r\n\ttimeout: 45000\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n\tfunction (config) {\r\n\t\tconsole.log('headers', config)\r\n\t\tconfig.headers = {\r\n\t\t\t...config.headers,\r\n\t\t\tAuthorization: _accessToken,\r\n\t\t};\r\n\t\treturn config;\r\n        \r\n\t},\r\n\tfunction (error) {\r\n\t\treturn Promise.reject(error);\r\n\t},\r\n);","import { axiosInstance } from '../api/MortageCalculator';\r\n\r\nconst CalculatorService = {\r\n\r\n\tasync mortgageCalculatorData(values) {\t\r\n\t\treturn axiosInstance.post(\r\n\t\t\t'calculator/calculatemortgage',\r\n\t\t\tvalues\r\n\t\t);\r\n\t},\r\n\r\n\tasync registerData(details) {\t\r\n\t\treturn axiosInstance.post(\r\n\t\t\t'calculator/register',\r\n\t\t\tdetails\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default CalculatorService;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CalculatorService from '../services/CalculatorService';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typist from 'react-text-typist';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: \"550px\",\r\n        height: \"500px\",\r\n        marginLeft: \"100px\",\r\n        marginTop: \"40px\",\r\n        backgroundColor: 'rgba(0,0,0,0.6)'\r\n    },\r\n    input: {\r\n        margin: theme.spacing(3),\r\n        marginLeft: \"30px\",\r\n        width: '200px',\r\n        borderColor: '#ffffff'\r\n    },\r\n    inputText: {\r\n        color: \"#ffffff\",\r\n    },\r\n    notchedOutline: {\r\n        borderColor: '#ffffff'\r\n    },\r\n    formHeader: {\r\n        fontSize: '30px',\r\n        fontWeight: 500,\r\n        color: '#FFFFFF',\r\n        padding: theme.spacing(1, 0, 0, 5),\r\n    },\r\n    regGrid: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    regButton: {\r\n        fontFamily: \"Oswald\",\r\n        color: '#ffffff',\r\n        marginLeft: '400px',\r\n        borderColor: '#ffffff',\r\n        width: '100px',\r\n        height: '50px'\r\n    },\r\n    msg: {\r\n        color: '#ffffff',\r\n        fontFamily: \"Oswald\"\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    modalPaper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\n\r\nconst Calculator = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [register, setRegister] = useState({\r\n        firstName: \"\",\r\n        surname: \"\",\r\n        email: \"\",\r\n        createPassword: \"\",\r\n        password: \"\",\r\n        message: \"\"\r\n    });\r\n    const [confirmMsg, setConfirmMsg] = useState(\"\");\r\n    const [msg, setMsg] = useState(false);\r\n    const [popUp, setPopUp] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        setRegister({\r\n            ...register,\r\n            [e.target.name]: value\r\n        })\r\n    };\r\n\r\n    const customerRegistration = async () => {\r\n        try {\r\n            if (register.email !== \"\") {\r\n                await CalculatorService.registerData(register).then((result) => {\r\n                    console.log('result', result.data);\r\n                });\r\n                setPopUp(true);\r\n                handleOpen();\r\n                setRegister({\r\n                    firstName: \"\",\r\n                    surname: \"\",\r\n                    email: \"\",\r\n                    createPassword: \"\",\r\n                    password: \"\",\r\n                    message: \"\"\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log('error', e.response);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <Paper className={classes.paper} elevation={10}>\r\n                    <Typist className={classes.formHeader} typingSpeed={130} pauseTime={5000} sentences={['Find your home. We will get you there.']} loop={true} />\r\n                    <div className={classes.regGrid}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            name=\"firstName\"\r\n                            placeholder=\"First Name\"\r\n                            variant=\"outlined\"\r\n                            id=\"custom-css-outlined-input\"\r\n                            InputProps={{\r\n                                className: classes.inputText,\r\n                                classes: {\r\n                                    notchedOutline: classes.notchedOutline\r\n                                }\r\n                            }}\r\n                            value={register.firstName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            className={classes.input}\r\n                            name=\"surname\"\r\n                            placeholder=\"Surname\"\r\n                            variant=\"outlined\"\r\n                            id=\"custom-css-outlined-input\"\r\n                            InputProps={{\r\n                                className: classes.inputText,\r\n                                classes: {\r\n                                    notchedOutline: classes.notchedOutline\r\n                                }\r\n                            }}\r\n                            value={register.surname}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            className={classes.input}\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            variant=\"outlined\"\r\n                            id=\"custom-css-outlined-input\"\r\n                            InputProps={{\r\n                                className: classes.inputText,\r\n                                classes: {\r\n                                    notchedOutline: classes.notchedOutline\r\n                                }\r\n                            }}\r\n                            style={{ width: '454px' }}\r\n                            value={register.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            className={classes.input}\r\n                            name=\"createPassword\"\r\n                            placeholder=\"Create Password\"\r\n                            variant=\"outlined\"\r\n                            id=\"custom-css-outlined-input\"\r\n                            type=\"password\"\r\n                            InputProps={{\r\n                                className: classes.inputText,\r\n                                classes: {\r\n                                    notchedOutline: classes.notchedOutline\r\n                                }\r\n                            }}\r\n                            value={register.createPassword}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            className={classes.input}\r\n                            name=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            variant=\"outlined\"\r\n                            id=\"custom-css-outlined-input\"\r\n                            type=\"password\"\r\n                            InputProps={{\r\n                                className: classes.inputText,\r\n                                classes: {\r\n                                    notchedOutline: classes.notchedOutline\r\n                                }\r\n                            }}\r\n                            value={register.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <Button className={classes.regButton} variant=\"outlined\" onClick={() => customerRegistration()}>Register</Button>\r\n                </Paper>\r\n            </div>\r\n            {popUp === true ?\r\n                <div>\r\n                    <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        className={classes.modal}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        closeAfterTransition\r\n                        BackdropComponent={Backdrop}\r\n                        BackdropProps={{\r\n                            timeout: 500,\r\n                        }}\r\n                    >\r\n                        <Fade in={open}>\r\n                            <div className={classes.modalPaper}>\r\n                                <h2>Successfully Registered!</h2>\r\n                                <p>Thank you for registering. You are one step away from your new home.\r\n                                    One of our agents will be in touch with you soon!</p>\r\n                            </div>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div> : null}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Calculator;","import React, { useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CalculatorService from '../services/CalculatorService';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Register from './Register';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    calcGrid: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 10, 0, 10),\r\n        maxWidth: '600px',\r\n        margin: 'auto'\r\n    },\r\n    heading: {\r\n        fontSize: '40px',\r\n        fontWeight: 500,\r\n        color: '#2a6279',\r\n        padding: theme.spacing(5, 3, 0, 12),\r\n        textTransform: 'uppercase'\r\n    },\r\n    button: {\r\n        color: '#ffffff',\r\n        fontFamily: \"Oswald\",\r\n        backgroundColor: '#2a6279',\r\n        marginLeft: '92px'\r\n    },\r\n    results: {\r\n        fontSize: '20px',\r\n        fontWeight: 500,\r\n        color: '#ffffff',\r\n        padding: theme.spacing(1, 0, 0, 5),\r\n        textTransform: 'uppercase'\r\n    },\r\n    resultsText: {\r\n        fontFamily: \"Oswald\",\r\n        fontSize: '60px',\r\n        padding: theme.spacing(1, 0, 0, 30),\r\n        color: '#ffffff'\r\n    },\r\n    payments:{\r\n      width: \"550px\",\r\n      height: \"150px\", \r\n      marginLeft: \"100px\",      \r\n      marginTop: \"40px\",\r\n      backgroundColor: 'rgba(0,0,0,0.6)'\r\n  },\r\n}));\r\n \r\n\r\nconst Calculator = () => {\r\n    const classes = useStyles();\r\n\r\n    const [calcValues, setCalcValues] = useState({\r\n        purchasePrice: \"\",\r\n        deposit: \"\",\r\n        loanTerm: \"\",\r\n        interestRate: \"\"\r\n    });\r\n    const [bondRepayments, setBondRepayments] = useState(0);\r\n    const years = [ 5, 10, 15, 20, 25, 30 ];\r\n\r\n    const handleChange = (e) => {    \r\n        let value = e.target.value;   \r\n        setCalcValues({\r\n            ...calcValues,\r\n            [e.target.name]: value\r\n        })\r\n    };\r\n\r\n    async function calculateMortgage() {    \r\n        const values = {\r\n            purchasePrice: parseFloat(calcValues.purchasePrice),\r\n            deposit: parseFloat(calcValues.deposit),\r\n            loanTerm: parseInt(calcValues.loanTerm),\r\n            interestRate: parseFloat(calcValues.interestRate)\r\n        }\r\n        const response = await CalculatorService.mortgageCalculatorData(values).then(data => {\r\n            setBondRepayments(parseFloat(data.data).toFixed(2));\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <h1 className={classes.heading}>Mortgage Calculator</h1>\r\n                <Grid container spacing={3} className={classes.calcGrid}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            label=\"Purchase price\"\r\n                            name=\"purchasePrice\"\r\n                            placeholder=\"0.00\"\r\n                            variant=\"outlined\"\r\n                            value={calcValues.purchasePrice}\r\n                            onChange={handleChange}\r\n                            className={classes.textFields}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">R</InputAdornment>,             \r\n                              }}                    \r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            label=\"Deposit (Optional)\"\r\n                            name=\"deposit\"\r\n                            placeholder=\"0.00\"\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">R</InputAdornment>\r\n                              }}\r\n                            variant=\"outlined\"\r\n                            value={calcValues.deposit}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            label=\"Loan Term\"\r\n                            select\r\n                            name=\"loanTerm\"\r\n                            placeholder=\"0\"\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            value={calcValues.loanTerm}\r\n                            onChange={handleChange}\r\n                            SelectProps={{\r\n                                native: true,\r\n                            }}\r\n                           fullWidth\r\n                        >\r\n                            {years.map((term) => (\r\n                                <option>\r\n                                    {term}\r\n                                </option>\r\n                            ))}\r\n                        </TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            label=\"Interest Rate\"\r\n                            name=\"interestRate\"\r\n                            placeholder=\"7.00%\"\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            value={calcValues.interestRate}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" className={classes.button} onClick={() => calculateMortgage()}>\r\n                    Calculate\r\n                </Button>\r\n            </div>\r\n            <div>\r\n              <Paper className={classes.payments} elevation={10}>\r\n                <h1 className={classes.results}>Monthly Payments</h1>\r\n                <Typography className={classes.resultsText}>R {bondRepayments}</Typography>\r\n              </Paper> \r\n              <Register />\r\n           </div>  \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Calculator;","import React from 'react';\nimport backgroundImage from \"./images/minimalistHome.jpg\" \nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Calculator from './components/Calculator';\n\nconst useStyles = makeStyles((theme) => ({\nroot:{\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: \"cover\",\n  backgroundPosition: 'center',\n  height: '100vh',\n  width: '100vw'\n}\n}));\n\nconst App = () => {\n  \n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.root}>\n      <Calculator/>\n      </Grid>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nconst { REACT_APP_BASEURL } = process.env;\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n\t<Router basename={REACT_APP_BASEURL}>\n\t\t<Route component={App} />\n\t</Router>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}